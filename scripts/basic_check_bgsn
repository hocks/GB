#!/bin/ksh93 
# changed 03/10/08 EH
# added check on /dbhome filsystem
# corrected check on LL demon

TZ=PDT8PST

# use our own df command that looks at /proc/mounts
DFCMD="/users/operator/df-proc-bg"

# when do we complain about space thresholds?
THRESH_LOW=90
THRESH_HI=95

# what colors do we want the text to be?
BLACK='[0;30m'
BLUE='[0;34m'
BROWN='[0;33m'
CYAN='[0;36m'
GRAY='[1;37m'
GREEN='[1;32m'
PINK='[1;35m'
LTBLUE='[1;34m'
LTCYAN='[1;36m'
LTGRAY='[0;37m'
LTGREEN='[1;32m'
LTRED='[1;31m'
PURPLE='[0;35m'
RED='[0;31m'
WHITE='[1;30m'
YELLOW='[1;33m'

# main loop
while ( true );
do
  NOW=`date '+%D %T'`

  echo -en "\033$LTBLUE ${NOW} BlueGene checks: \n "


# check gpfs
# /bggpfs mounted?

echo -en "\033$LTBLUE GPFS filesystems: \n"
GPFS=`mount |grep /bggpfs |grep -v grep`
if [ $? = "0" ]; then
    echo -en "\033$GREEN bggpfs mounted, "
   # space on /bggpfs?
   GPFS=`${DFCMD} -Pk /bggpfs | grep -v ^File | awk '{ print $5 }' | sed -e 's/%//'`
   if [ "${GPFS}" -le ${THRESH_LOW} ]
   then
     echo -en "\033$GREEN bggpfs ${GPFS}% \n"
   elif [ "${GPFS}" -le ${THRESH_HI} ]
   then
     echo -en "\033$YELLOW bggpfs ${GPFS}% \n"
   else
     echo -en "\033$RED bggpfs ${GPFS}% \n"
   OHSHIT=1;
   fi
else
    echo -en "\033$RED bggpfs NOT mounted, \n"
    OHSHIT=1;
fi



# is /gpfs-wan mounted?
GPFS=`mount |grep /gpfs-wan |grep -v grep`
if [ $? = "0" ]; then
    echo -en "\033$GREEN gpfs-wan mounted, \n"
else
    echo -en "\033$RED gpfs-wan NOT mounted, \n"
    OHSHIT=1;
fi


#LoadLeveler check for bgsn
#Check for LoadL_master, LoadL_negotiator, LoadL_starter, LoadL_schedd
# reset
OHSHIT=0

echo -en "\033$BLUE LoadLeveler daemon: \n"
#### Generate a list of all LL processes on the system and store
#### the list in an array, one process record line per array
#### element. 
MASTER=2
STARTD=2
NEGO=2
SCHEDD=2

  ps aux | grep loadl | grep -v cp | grep -v grep | awk '{ print $11}' |while read line
   do
     if [ "$line" = "/opt/ibmll/LoadL/full/bin/LoadL_master" ]; then
    MASTER=1
    echo -en "\033$GREEN LL master running, \n"
    elif [ "$line" =  "LoadL_starter" ]; then
    STARTD=1
    echo -en "\033$GREEN LL starter running, \n"
    elif [ "$line" = "LoadL_negotiator" ]; then
    NEGO=1
    echo -en "\033$GREEN LL negotiator running, \n"
    elif [ "$line" = "LoadL_schedd" ]; then
    SCHEDD=1
    echo -en "\033$GREEN LL scheduler running, \n"
   fi
  done  

if [ "${MASTER}" -eq 0 ]; then
    echo -en "\033$RED LL master is missing, \n"
fi
if [ $STARTD -ne 1 ]; then
    echo -en "\033$RED LL starter is missing, \n"
fi
if [ $NEGO -ne 1 ]; then
    echo -en "\033$RED LL negotiator is missing, \n"
fi
if [ $SCHEDD -ne 1 ]; then
    echo -en "\033$RED LL scheduler is missing, \n"
fi

# list blocks

echo -en "\033$BLUE List allocated blocks: \n"
~hocks/scripts/list_blocks_be | grep "connected" | while read line
  do
  echo -en "\033$GREEN $line, \n"
  done

#list LL

echo -en "\033$LTBLUE List LoadLevler job information: \033$GREEN\n"
~hocks/showq |grep Running
if [ $? != 0 ] 
 then
  echo -en "\033$LTBLUE No jobs running,\033$BLUE check for reservation: \n"
  echo -en "\033$LTBLUE Reservation:"
  llqres|grep bgsn
  if [ $? != 0 ]
   then
   ~hocks/showq |grep Idle
    if [ $? = 0 ]
    then
    echo -en "\033$RED Idle jobs waiting  \n"
    echo -en "\033$RED ******  call On-Call ********* \n"
    fi
  echo -en "\033$LTBLUE No Reservations \n"
  echo -en "\033$GREEN No Jobs waiting \n"
  fi
fi


# edited by enegado@sdsc.edu
# edited by hocks@sdsc.edu   corrected print line
# silently check all filesystems
IFS=$'\n'
for F in / /dev/shm /tmp /var /dbhome /bgl /usr/local /users 
do
dfForFS=`${DFCMD} -P $F | egrep -v '^File|^/proc'| awk '{ print $5, $6 }' | sed -e 's/%//'`
     PCTUSED=`echo $dfForFS | awk '{ print $1 }'`
    if [ $PCTUSED -gt ${THRESH_HI}  ]
    then
        echo -en "\033$RED  ALERT!: ${dfForFS} \n"
    elif [ $PCTUSED -gt ${THRESH_LOW} ]

    then
        echo -en "\033$YELLOW WARN: ${dfForFS} \n"
        OHSHIT=1
    fi
done

    echo 


# wait
sleep 600

done


